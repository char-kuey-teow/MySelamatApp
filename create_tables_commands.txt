# AWS CLI Commands to Create DynamoDB Tables

# 1. Create SOS Table
aws dynamodb create-table \
  --table-name sos \
  --attribute-definitions \
    AttributeName=id,AttributeType=S \
    AttributeName=userId,AttributeType=S \
    AttributeName=timestamp,AttributeType=S \
    AttributeName=category,AttributeType=S \
    AttributeName=status,AttributeType=S \
  --key-schema \
    AttributeName=id,KeyType=HASH \
  --global-secondary-indexes \
    IndexName=userId-timestamp-index,KeySchema='[{AttributeName=userId,KeyType=HASH},{AttributeName=timestamp,KeyType=RANGE}]',Projection='{ProjectionType=ALL}' \
    IndexName=category-timestamp-index,KeySchema='[{AttributeName=category,KeyType=HASH},{AttributeName=timestamp,KeyType=RANGE}]',Projection='{ProjectionType=ALL}' \
    IndexName=status-timestamp-index,KeySchema='[{AttributeName=status,KeyType=HASH},{AttributeName=timestamp,KeyType=RANGE}]',Projection='{ProjectionType=ALL}' \
  --billing-mode PAY_PER_REQUEST

# 2. Create Report Table
aws dynamodb create-table \
  --table-name report \
  --attribute-definitions \
    AttributeName=id,AttributeType=S \
    AttributeName=userId,AttributeType=S \
    AttributeName=timestamp,AttributeType=S \
    AttributeName=disasterType,AttributeType=S \
    AttributeName=location,AttributeType=S \
  --key-schema \
    AttributeName=id,KeyType=HASH \
  --global-secondary-indexes \
    IndexName=userId-timestamp-index,KeySchema='[{AttributeName=userId,KeyType=HASH},{AttributeName=timestamp,KeyType=RANGE}]',Projection='{ProjectionType=ALL}' \
    IndexName=disasterType-timestamp-index,KeySchema='[{AttributeName=disasterType,KeyType=HASH},{AttributeName=timestamp,KeyType=RANGE}]',Projection='{ProjectionType=ALL}' \
    IndexName=location-timestamp-index,KeySchema='[{AttributeName=location,KeyType=HASH},{AttributeName=timestamp,KeyType=RANGE}]',Projection='{ProjectionType=ALL}' \
  --billing-mode PAY_PER_REQUEST

# 3. Wait for tables to be created
aws dynamodb wait table-exists --table-name sos
aws dynamodb wait table-exists --table-name report

# 4. Test Lambda function
aws lambda invoke \
  --function-name S3ToDynamoDBImporter \
  --payload '{"bucket":"selamat-app-reports","prefix":"sos/"}' \
  response.json





